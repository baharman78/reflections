Lesson_2_reflections
Brent Harman

1.	What happens when you initialize a repository? Why do you need to
it?

All your files show up as not tracked.  This needs to be done so that
you can choose which items should be tracked.  You might have contents in the
folder you might not want tracked, because it will never change from
revision to revision of code.  This also keeps the software from allocating
space for these items that will never change in the repository everytime you
commit.

2.  How is the staging area different from the working directory and the
repository?  What value do you think it offers?

The staging area allows the user to choose which files to commit.  It is a
location for choosing which files from the working directory to the
repository.  This is valuable, because you can commit part of the files if you
mess up on one file.  Then you can recheck out the master without worrying
about missing anything you might have changed.

3.  How can you use the staging area to make sure you have one commit per
logical change?

You can use the git diff --staged command to see the changes in between the
original commit, and the modified files in the staging area.  This will allow
you to verify whether or not you have made only enough changes for a logical
change.  Then you can commit it to the repository.

4.  What are some situations when branches would be helpful in keeping your
history organized?  How would branches help?

Branches would be helpful if you are testing new features, and you don't want
to modified the original in case you don't want to incorporate the changes.
This will allow you to better organize unpolished code until you can
incorporate it into the master commit.
